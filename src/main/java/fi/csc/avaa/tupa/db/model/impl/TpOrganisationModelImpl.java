package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.TpOrganisation;
import fi.csc.avaa.tupa.db.model.TpOrganisationModel;
import fi.csc.avaa.tupa.db.model.TpOrganisationSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TpOrganisation service. Represents a row in the &quot;tupa_TpOrganisation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.TpOrganisationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TpOrganisationImpl}.
 * </p>
 *
 * @author CSC
 * @see TpOrganisationImpl
 * @see fi.csc.avaa.tupa.db.model.TpOrganisation
 * @see fi.csc.avaa.tupa.db.model.TpOrganisationModel
 * @generated
 */
@JSON(strict = true)
public class TpOrganisationModelImpl extends BaseModelImpl<TpOrganisation>
    implements TpOrganisationModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a tp organisation model instance should use the {@link fi.csc.avaa.tupa.db.model.TpOrganisation} interface instead.
     */
    public static final String TABLE_NAME = "tupa_TpOrganisation";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.INTEGER },
            { "name_EN", Types.VARCHAR },
            { "name_FI", Types.VARCHAR },
            { "isni", Types.VARCHAR },
            { "motherOrganisationsIds", Types.INTEGER },
            { "country", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table tupa_TpOrganisation (id_ INTEGER not null primary key,name_EN VARCHAR(75) null,name_FI VARCHAR(75) null,isni VARCHAR(75) null,motherOrganisationsIds INTEGER,country VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table tupa_TpOrganisation";
    public static final String ORDER_BY_JPQL = " ORDER BY tpOrganisation.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tupa_TpOrganisation.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.TpOrganisation"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.TpOrganisation"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.TpOrganisation"));
    private static ClassLoader _classLoader = TpOrganisation.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            TpOrganisation.class
        };
    private int _id;
    private String _name_EN;
    private String _name_FI;
    private String _isni;
    private int _motherOrganisationsIds;
    private String _country;
    private TpOrganisation _escapedModel;

    public TpOrganisationModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static TpOrganisation toModel(TpOrganisationSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        TpOrganisation model = new TpOrganisationImpl();

        model.setId(soapModel.getId());
        model.setName_EN(soapModel.getName_EN());
        model.setName_FI(soapModel.getName_FI());
        model.setIsni(soapModel.getIsni());
        model.setMotherOrganisationsIds(soapModel.getMotherOrganisationsIds());
        model.setCountry(soapModel.getCountry());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<TpOrganisation> toModels(TpOrganisationSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<TpOrganisation> models = new ArrayList<TpOrganisation>(soapModels.length);

        for (TpOrganisationSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return TpOrganisation.class;
    }

    @Override
    public String getModelClassName() {
        return TpOrganisation.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("name_EN", getName_EN());
        attributes.put("name_FI", getName_FI());
        attributes.put("isni", getIsni());
        attributes.put("motherOrganisationsIds", getMotherOrganisationsIds());
        attributes.put("country", getCountry());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer id = (Integer) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String name_EN = (String) attributes.get("name_EN");

        if (name_EN != null) {
            setName_EN(name_EN);
        }

        String name_FI = (String) attributes.get("name_FI");

        if (name_FI != null) {
            setName_FI(name_FI);
        }

        String isni = (String) attributes.get("isni");

        if (isni != null) {
            setIsni(isni);
        }

        Integer motherOrganisationsIds = (Integer) attributes.get(
                "motherOrganisationsIds");

        if (motherOrganisationsIds != null) {
            setMotherOrganisationsIds(motherOrganisationsIds);
        }

        String country = (String) attributes.get("country");

        if (country != null) {
            setCountry(country);
        }
    }

    @JSON
    @Override
    public int getId() {
        return _id;
    }

    @Override
    public void setId(int id) {
        _id = id;
    }

    @JSON
    @Override
    public String getName_EN() {
        if (_name_EN == null) {
            return StringPool.BLANK;
        } else {
            return _name_EN;
        }
    }

    @Override
    public void setName_EN(String name_EN) {
        _name_EN = name_EN;
    }

    @JSON
    @Override
    public String getName_FI() {
        if (_name_FI == null) {
            return StringPool.BLANK;
        } else {
            return _name_FI;
        }
    }

    @Override
    public void setName_FI(String name_FI) {
        _name_FI = name_FI;
    }

    @JSON
    @Override
    public String getIsni() {
        if (_isni == null) {
            return StringPool.BLANK;
        } else {
            return _isni;
        }
    }

    @Override
    public void setIsni(String isni) {
        _isni = isni;
    }

    @JSON
    @Override
    public int getMotherOrganisationsIds() {
        return _motherOrganisationsIds;
    }

    @Override
    public void setMotherOrganisationsIds(int motherOrganisationsIds) {
        _motherOrganisationsIds = motherOrganisationsIds;
    }

    @JSON
    @Override
    public String getCountry() {
        if (_country == null) {
            return StringPool.BLANK;
        } else {
            return _country;
        }
    }

    @Override
    public void setCountry(String country) {
        _country = country;
    }

    @Override
    public TpOrganisation toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (TpOrganisation) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        TpOrganisationImpl tpOrganisationImpl = new TpOrganisationImpl();

        tpOrganisationImpl.setId(getId());
        tpOrganisationImpl.setName_EN(getName_EN());
        tpOrganisationImpl.setName_FI(getName_FI());
        tpOrganisationImpl.setIsni(getIsni());
        tpOrganisationImpl.setMotherOrganisationsIds(getMotherOrganisationsIds());
        tpOrganisationImpl.setCountry(getCountry());

        tpOrganisationImpl.resetOriginalValues();

        return tpOrganisationImpl;
    }

    @Override
    public int compareTo(TpOrganisation tpOrganisation) {
        int primaryKey = tpOrganisation.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof TpOrganisation)) {
            return false;
        }

        TpOrganisation tpOrganisation = (TpOrganisation) obj;

        int primaryKey = tpOrganisation.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<TpOrganisation> toCacheModel() {
        TpOrganisationCacheModel tpOrganisationCacheModel = new TpOrganisationCacheModel();

        tpOrganisationCacheModel.id = getId();

        tpOrganisationCacheModel.name_EN = getName_EN();

        String name_EN = tpOrganisationCacheModel.name_EN;

        if ((name_EN != null) && (name_EN.length() == 0)) {
            tpOrganisationCacheModel.name_EN = null;
        }

        tpOrganisationCacheModel.name_FI = getName_FI();

        String name_FI = tpOrganisationCacheModel.name_FI;

        if ((name_FI != null) && (name_FI.length() == 0)) {
            tpOrganisationCacheModel.name_FI = null;
        }

        tpOrganisationCacheModel.isni = getIsni();

        String isni = tpOrganisationCacheModel.isni;

        if ((isni != null) && (isni.length() == 0)) {
            tpOrganisationCacheModel.isni = null;
        }

        tpOrganisationCacheModel.motherOrganisationsIds = getMotherOrganisationsIds();

        tpOrganisationCacheModel.country = getCountry();

        String country = tpOrganisationCacheModel.country;

        if ((country != null) && (country.length() == 0)) {
            tpOrganisationCacheModel.country = null;
        }

        return tpOrganisationCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(13);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", name_EN=");
        sb.append(getName_EN());
        sb.append(", name_FI=");
        sb.append(getName_FI());
        sb.append(", isni=");
        sb.append(getIsni());
        sb.append(", motherOrganisationsIds=");
        sb.append(getMotherOrganisationsIds());
        sb.append(", country=");
        sb.append(getCountry());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(22);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.TpOrganisation");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name_EN</column-name><column-value><![CDATA[");
        sb.append(getName_EN());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name_FI</column-name><column-value><![CDATA[");
        sb.append(getName_FI());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>isni</column-name><column-value><![CDATA[");
        sb.append(getIsni());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>motherOrganisationsIds</column-name><column-value><![CDATA[");
        sb.append(getMotherOrganisationsIds());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>country</column-name><column-value><![CDATA[");
        sb.append(getCountry());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
