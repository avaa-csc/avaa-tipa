package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.Infra_Identifier;
import fi.csc.avaa.tupa.db.model.Infra_IdentifierModel;
import fi.csc.avaa.tupa.db.service.persistence.Infra_IdentifierPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Infra_Identifier service. Represents a row in the &quot;infra_identifier&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.Infra_IdentifierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Infra_IdentifierImpl}.
 * </p>
 *
 * @author CSC
 * @see Infra_IdentifierImpl
 * @see fi.csc.avaa.tupa.db.model.Infra_Identifier
 * @see fi.csc.avaa.tupa.db.model.Infra_IdentifierModel
 * @generated
 */
public class Infra_IdentifierModelImpl extends BaseModelImpl<Infra_Identifier>
    implements Infra_IdentifierModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a infra_ identifier model instance should use the {@link fi.csc.avaa.tupa.db.model.Infra_Identifier} interface instead.
     */
    public static final String TABLE_NAME = "infra_identifier";
    public static final Object[][] TABLE_COLUMNS = {
            { "identifier_type", Types.INTEGER },
            { "infra_id", Types.INTEGER },
            { "identifier_value", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table infra_identifier (identifier_type INTEGER not null,infra_id INTEGER not null,identifier_value VARCHAR(75) not null,primary key (identifier_type, infra_id, identifier_value))";
    public static final String TABLE_SQL_DROP = "drop table infra_identifier";
    public static final String ORDER_BY_JPQL = " ORDER BY infra_Identifier.id.identifier_type ASC, infra_Identifier.id.infra_id ASC, infra_Identifier.id.identifier_value ASC";
    public static final String ORDER_BY_SQL = " ORDER BY infra_identifier.identifier_type ASC, infra_identifier.infra_id ASC, infra_identifier.identifier_value ASC";
    public static final String DATA_SOURCE = "tupa";
    public static final String SESSION_FACTORY = "tupaSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.Infra_Identifier"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.Infra_Identifier"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.fi.csc.avaa.tupa.db.model.Infra_Identifier"),
            true);
    public static long IDENTIFIER_TYPE_COLUMN_BITMASK = 1L;
    public static long IDENTIFIER_VALUE_COLUMN_BITMASK = 2L;
    public static long INFRA_ID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.Infra_Identifier"));
    private static ClassLoader _classLoader = Infra_Identifier.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Infra_Identifier.class
        };
    private int _identifier_type;
    private int _originalIdentifier_type;
    private boolean _setOriginalIdentifier_type;
    private int _infra_id;
    private int _originalInfra_id;
    private boolean _setOriginalInfra_id;
    private String _identifier_value;
    private String _originalIdentifier_value;
    private long _columnBitmask;
    private Infra_Identifier _escapedModel;

    public Infra_IdentifierModelImpl() {
    }

    @Override
    public Infra_IdentifierPK getPrimaryKey() {
        return new Infra_IdentifierPK(_identifier_type, _infra_id,
            _identifier_value);
    }

    @Override
    public void setPrimaryKey(Infra_IdentifierPK primaryKey) {
        setIdentifier_type(primaryKey.identifier_type);
        setInfra_id(primaryKey.infra_id);
        setIdentifier_value(primaryKey.identifier_value);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new Infra_IdentifierPK(_identifier_type, _infra_id,
            _identifier_value);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((Infra_IdentifierPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return Infra_Identifier.class;
    }

    @Override
    public String getModelClassName() {
        return Infra_Identifier.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("identifier_type", getIdentifier_type());
        attributes.put("infra_id", getInfra_id());
        attributes.put("identifier_value", getIdentifier_value());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer identifier_type = (Integer) attributes.get("identifier_type");

        if (identifier_type != null) {
            setIdentifier_type(identifier_type);
        }

        Integer infra_id = (Integer) attributes.get("infra_id");

        if (infra_id != null) {
            setInfra_id(infra_id);
        }

        String identifier_value = (String) attributes.get("identifier_value");

        if (identifier_value != null) {
            setIdentifier_value(identifier_value);
        }
    }

    @Override
    public int getIdentifier_type() {
        return _identifier_type;
    }

    @Override
    public void setIdentifier_type(int identifier_type) {
        _columnBitmask |= IDENTIFIER_TYPE_COLUMN_BITMASK;

        if (!_setOriginalIdentifier_type) {
            _setOriginalIdentifier_type = true;

            _originalIdentifier_type = _identifier_type;
        }

        _identifier_type = identifier_type;
    }

    public int getOriginalIdentifier_type() {
        return _originalIdentifier_type;
    }

    @Override
    public int getInfra_id() {
        return _infra_id;
    }

    @Override
    public void setInfra_id(int infra_id) {
        _columnBitmask |= INFRA_ID_COLUMN_BITMASK;

        if (!_setOriginalInfra_id) {
            _setOriginalInfra_id = true;

            _originalInfra_id = _infra_id;
        }

        _infra_id = infra_id;
    }

    public int getOriginalInfra_id() {
        return _originalInfra_id;
    }

    @Override
    public String getIdentifier_value() {
        if (_identifier_value == null) {
            return StringPool.BLANK;
        } else {
            return _identifier_value;
        }
    }

    @Override
    public void setIdentifier_value(String identifier_value) {
        _columnBitmask |= IDENTIFIER_VALUE_COLUMN_BITMASK;

        if (_originalIdentifier_value == null) {
            _originalIdentifier_value = _identifier_value;
        }

        _identifier_value = identifier_value;
    }

    public String getOriginalIdentifier_value() {
        return GetterUtil.getString(_originalIdentifier_value);
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public Infra_Identifier toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Infra_Identifier) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Infra_IdentifierImpl infra_IdentifierImpl = new Infra_IdentifierImpl();

        infra_IdentifierImpl.setIdentifier_type(getIdentifier_type());
        infra_IdentifierImpl.setInfra_id(getInfra_id());
        infra_IdentifierImpl.setIdentifier_value(getIdentifier_value());

        infra_IdentifierImpl.resetOriginalValues();

        return infra_IdentifierImpl;
    }

    @Override
    public int compareTo(Infra_Identifier infra_Identifier) {
        Infra_IdentifierPK primaryKey = infra_Identifier.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Infra_Identifier)) {
            return false;
        }

        Infra_Identifier infra_Identifier = (Infra_Identifier) obj;

        Infra_IdentifierPK primaryKey = infra_Identifier.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        Infra_IdentifierModelImpl infra_IdentifierModelImpl = this;

        infra_IdentifierModelImpl._originalIdentifier_type = infra_IdentifierModelImpl._identifier_type;

        infra_IdentifierModelImpl._setOriginalIdentifier_type = false;

        infra_IdentifierModelImpl._originalInfra_id = infra_IdentifierModelImpl._infra_id;

        infra_IdentifierModelImpl._setOriginalInfra_id = false;

        infra_IdentifierModelImpl._originalIdentifier_value = infra_IdentifierModelImpl._identifier_value;

        infra_IdentifierModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Infra_Identifier> toCacheModel() {
        Infra_IdentifierCacheModel infra_IdentifierCacheModel = new Infra_IdentifierCacheModel();

        infra_IdentifierCacheModel.identifier_type = getIdentifier_type();

        infra_IdentifierCacheModel.infra_id = getInfra_id();

        infra_IdentifierCacheModel.identifier_value = getIdentifier_value();

        String identifier_value = infra_IdentifierCacheModel.identifier_value;

        if ((identifier_value != null) && (identifier_value.length() == 0)) {
            infra_IdentifierCacheModel.identifier_value = null;
        }

        return infra_IdentifierCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{identifier_type=");
        sb.append(getIdentifier_type());
        sb.append(", infra_id=");
        sb.append(getInfra_id());
        sb.append(", identifier_value=");
        sb.append(getIdentifier_value());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.Infra_Identifier");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>identifier_type</column-name><column-value><![CDATA[");
        sb.append(getIdentifier_type());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>infra_id</column-name><column-value><![CDATA[");
        sb.append(getInfra_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>identifier_value</column-name><column-value><![CDATA[");
        sb.append(getIdentifier_value());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
