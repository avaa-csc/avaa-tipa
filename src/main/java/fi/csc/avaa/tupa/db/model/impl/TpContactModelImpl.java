package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.TpContact;
import fi.csc.avaa.tupa.db.model.TpContactModel;
import fi.csc.avaa.tupa.db.model.TpContactSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TpContact service. Represents a row in the &quot;tupa_TpContact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.TpContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TpContactImpl}.
 * </p>
 *
 * @author CSC
 * @see TpContactImpl
 * @see fi.csc.avaa.tupa.db.model.TpContact
 * @see fi.csc.avaa.tupa.db.model.TpContactModel
 * @generated
 */
@JSON(strict = true)
public class TpContactModelImpl extends BaseModelImpl<TpContact>
    implements TpContactModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a tp contact model instance should use the {@link fi.csc.avaa.tupa.db.model.TpContact} interface instead.
     */
    public static final String TABLE_NAME = "tupa_TpContact";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.INTEGER },
            { "email", Types.VARCHAR },
            { "phone", Types.VARCHAR },
            { "title", Types.VARCHAR },
            { "firstName", Types.VARCHAR },
            { "lastName", Types.VARCHAR },
            { "url", Types.VARCHAR },
            { "description_EN", Types.VARCHAR },
            { "description_FI", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table tupa_TpContact (id_ INTEGER not null primary key,email VARCHAR(75) null,phone VARCHAR(75) null,title VARCHAR(75) null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,url VARCHAR(75) null,description_EN VARCHAR(75) null,description_FI VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table tupa_TpContact";
    public static final String ORDER_BY_JPQL = " ORDER BY tpContact.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tupa_TpContact.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.TpContact"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.TpContact"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.TpContact"));
    private static ClassLoader _classLoader = TpContact.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            TpContact.class
        };
    private int _id;
    private String _email;
    private String _phone;
    private String _title;
    private String _firstName;
    private String _lastName;
    private String _url;
    private String _description_EN;
    private String _description_FI;
    private TpContact _escapedModel;

    public TpContactModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static TpContact toModel(TpContactSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        TpContact model = new TpContactImpl();

        model.setId(soapModel.getId());
        model.setEmail(soapModel.getEmail());
        model.setPhone(soapModel.getPhone());
        model.setTitle(soapModel.getTitle());
        model.setFirstName(soapModel.getFirstName());
        model.setLastName(soapModel.getLastName());
        model.setUrl(soapModel.getUrl());
        model.setDescription_EN(soapModel.getDescription_EN());
        model.setDescription_FI(soapModel.getDescription_FI());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<TpContact> toModels(TpContactSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<TpContact> models = new ArrayList<TpContact>(soapModels.length);

        for (TpContactSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return TpContact.class;
    }

    @Override
    public String getModelClassName() {
        return TpContact.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("email", getEmail());
        attributes.put("phone", getPhone());
        attributes.put("title", getTitle());
        attributes.put("firstName", getFirstName());
        attributes.put("lastName", getLastName());
        attributes.put("url", getUrl());
        attributes.put("description_EN", getDescription_EN());
        attributes.put("description_FI", getDescription_FI());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer id = (Integer) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String email = (String) attributes.get("email");

        if (email != null) {
            setEmail(email);
        }

        String phone = (String) attributes.get("phone");

        if (phone != null) {
            setPhone(phone);
        }

        String title = (String) attributes.get("title");

        if (title != null) {
            setTitle(title);
        }

        String firstName = (String) attributes.get("firstName");

        if (firstName != null) {
            setFirstName(firstName);
        }

        String lastName = (String) attributes.get("lastName");

        if (lastName != null) {
            setLastName(lastName);
        }

        String url = (String) attributes.get("url");

        if (url != null) {
            setUrl(url);
        }

        String description_EN = (String) attributes.get("description_EN");

        if (description_EN != null) {
            setDescription_EN(description_EN);
        }

        String description_FI = (String) attributes.get("description_FI");

        if (description_FI != null) {
            setDescription_FI(description_FI);
        }
    }

    @JSON
    @Override
    public int getId() {
        return _id;
    }

    @Override
    public void setId(int id) {
        _id = id;
    }

    @JSON
    @Override
    public String getEmail() {
        if (_email == null) {
            return StringPool.BLANK;
        } else {
            return _email;
        }
    }

    @Override
    public void setEmail(String email) {
        _email = email;
    }

    @JSON
    @Override
    public String getPhone() {
        if (_phone == null) {
            return StringPool.BLANK;
        } else {
            return _phone;
        }
    }

    @Override
    public void setPhone(String phone) {
        _phone = phone;
    }

    @JSON
    @Override
    public String getTitle() {
        if (_title == null) {
            return StringPool.BLANK;
        } else {
            return _title;
        }
    }

    @Override
    public void setTitle(String title) {
        _title = title;
    }

    @JSON
    @Override
    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    @Override
    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    @JSON
    @Override
    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    @Override
    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    @JSON
    @Override
    public String getUrl() {
        if (_url == null) {
            return StringPool.BLANK;
        } else {
            return _url;
        }
    }

    @Override
    public void setUrl(String url) {
        _url = url;
    }

    @JSON
    @Override
    public String getDescription_EN() {
        if (_description_EN == null) {
            return StringPool.BLANK;
        } else {
            return _description_EN;
        }
    }

    @Override
    public void setDescription_EN(String description_EN) {
        _description_EN = description_EN;
    }

    @JSON
    @Override
    public String getDescription_FI() {
        if (_description_FI == null) {
            return StringPool.BLANK;
        } else {
            return _description_FI;
        }
    }

    @Override
    public void setDescription_FI(String description_FI) {
        _description_FI = description_FI;
    }

    @Override
    public TpContact toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (TpContact) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        TpContactImpl tpContactImpl = new TpContactImpl();

        tpContactImpl.setId(getId());
        tpContactImpl.setEmail(getEmail());
        tpContactImpl.setPhone(getPhone());
        tpContactImpl.setTitle(getTitle());
        tpContactImpl.setFirstName(getFirstName());
        tpContactImpl.setLastName(getLastName());
        tpContactImpl.setUrl(getUrl());
        tpContactImpl.setDescription_EN(getDescription_EN());
        tpContactImpl.setDescription_FI(getDescription_FI());

        tpContactImpl.resetOriginalValues();

        return tpContactImpl;
    }

    @Override
    public int compareTo(TpContact tpContact) {
        int primaryKey = tpContact.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof TpContact)) {
            return false;
        }

        TpContact tpContact = (TpContact) obj;

        int primaryKey = tpContact.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<TpContact> toCacheModel() {
        TpContactCacheModel tpContactCacheModel = new TpContactCacheModel();

        tpContactCacheModel.id = getId();

        tpContactCacheModel.email = getEmail();

        String email = tpContactCacheModel.email;

        if ((email != null) && (email.length() == 0)) {
            tpContactCacheModel.email = null;
        }

        tpContactCacheModel.phone = getPhone();

        String phone = tpContactCacheModel.phone;

        if ((phone != null) && (phone.length() == 0)) {
            tpContactCacheModel.phone = null;
        }

        tpContactCacheModel.title = getTitle();

        String title = tpContactCacheModel.title;

        if ((title != null) && (title.length() == 0)) {
            tpContactCacheModel.title = null;
        }

        tpContactCacheModel.firstName = getFirstName();

        String firstName = tpContactCacheModel.firstName;

        if ((firstName != null) && (firstName.length() == 0)) {
            tpContactCacheModel.firstName = null;
        }

        tpContactCacheModel.lastName = getLastName();

        String lastName = tpContactCacheModel.lastName;

        if ((lastName != null) && (lastName.length() == 0)) {
            tpContactCacheModel.lastName = null;
        }

        tpContactCacheModel.url = getUrl();

        String url = tpContactCacheModel.url;

        if ((url != null) && (url.length() == 0)) {
            tpContactCacheModel.url = null;
        }

        tpContactCacheModel.description_EN = getDescription_EN();

        String description_EN = tpContactCacheModel.description_EN;

        if ((description_EN != null) && (description_EN.length() == 0)) {
            tpContactCacheModel.description_EN = null;
        }

        tpContactCacheModel.description_FI = getDescription_FI();

        String description_FI = tpContactCacheModel.description_FI;

        if ((description_FI != null) && (description_FI.length() == 0)) {
            tpContactCacheModel.description_FI = null;
        }

        return tpContactCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(19);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", email=");
        sb.append(getEmail());
        sb.append(", phone=");
        sb.append(getPhone());
        sb.append(", title=");
        sb.append(getTitle());
        sb.append(", firstName=");
        sb.append(getFirstName());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", url=");
        sb.append(getUrl());
        sb.append(", description_EN=");
        sb.append(getDescription_EN());
        sb.append(", description_FI=");
        sb.append(getDescription_FI());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(31);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.TpContact");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>email</column-name><column-value><![CDATA[");
        sb.append(getEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>phone</column-name><column-value><![CDATA[");
        sb.append(getPhone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>title</column-name><column-value><![CDATA[");
        sb.append(getTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>url</column-name><column-value><![CDATA[");
        sb.append(getUrl());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description_EN</column-name><column-value><![CDATA[");
        sb.append(getDescription_EN());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description_FI</column-name><column-value><![CDATA[");
        sb.append(getDescription_FI());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
