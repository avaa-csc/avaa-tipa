package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit;
import fi.csc.avaa.tupa.db.model.Palvelu_PalvelutyypitModel;
import fi.csc.avaa.tupa.db.service.persistence.Palvelu_PalvelutyypitPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Palvelu_Palvelutyypit service. Represents a row in the &quot;palvelu_palvelutyypit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.Palvelu_PalvelutyypitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Palvelu_PalvelutyypitImpl}.
 * </p>
 *
 * @author CSC
 * @see Palvelu_PalvelutyypitImpl
 * @see fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit
 * @see fi.csc.avaa.tupa.db.model.Palvelu_PalvelutyypitModel
 * @generated
 */
public class Palvelu_PalvelutyypitModelImpl extends BaseModelImpl<Palvelu_Palvelutyypit>
    implements Palvelu_PalvelutyypitModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a palvelu_ palvelutyypit model instance should use the {@link fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit} interface instead.
     */
    public static final String TABLE_NAME = "palvelu_palvelutyypit";
    public static final Object[][] TABLE_COLUMNS = {
            { "palvelu_id", Types.INTEGER },
            { "palvelutyyppi_id", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table palvelu_palvelutyypit (palvelu_id INTEGER not null,palvelutyyppi_id INTEGER not null,primary key (palvelu_id, palvelutyyppi_id))";
    public static final String TABLE_SQL_DROP = "drop table palvelu_palvelutyypit";
    public static final String ORDER_BY_JPQL = " ORDER BY palvelu_Palvelutyypit.id.palvelu_id ASC, palvelu_Palvelutyypit.id.palvelutyyppi_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY palvelu_palvelutyypit.palvelu_id ASC, palvelu_palvelutyypit.palvelutyyppi_id ASC";
    public static final String DATA_SOURCE = "tupa";
    public static final String SESSION_FACTORY = "tupaSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit"));
    private static ClassLoader _classLoader = Palvelu_Palvelutyypit.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Palvelu_Palvelutyypit.class
        };
    private int _palvelu_id;
    private int _palvelutyyppi_id;
    private Palvelu_Palvelutyypit _escapedModel;

    public Palvelu_PalvelutyypitModelImpl() {
    }

    @Override
    public Palvelu_PalvelutyypitPK getPrimaryKey() {
        return new Palvelu_PalvelutyypitPK(_palvelu_id, _palvelutyyppi_id);
    }

    @Override
    public void setPrimaryKey(Palvelu_PalvelutyypitPK primaryKey) {
        setPalvelu_id(primaryKey.palvelu_id);
        setPalvelutyyppi_id(primaryKey.palvelutyyppi_id);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new Palvelu_PalvelutyypitPK(_palvelu_id, _palvelutyyppi_id);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((Palvelu_PalvelutyypitPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return Palvelu_Palvelutyypit.class;
    }

    @Override
    public String getModelClassName() {
        return Palvelu_Palvelutyypit.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("palvelu_id", getPalvelu_id());
        attributes.put("palvelutyyppi_id", getPalvelutyyppi_id());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer palvelu_id = (Integer) attributes.get("palvelu_id");

        if (palvelu_id != null) {
            setPalvelu_id(palvelu_id);
        }

        Integer palvelutyyppi_id = (Integer) attributes.get("palvelutyyppi_id");

        if (palvelutyyppi_id != null) {
            setPalvelutyyppi_id(palvelutyyppi_id);
        }
    }

    @Override
    public int getPalvelu_id() {
        return _palvelu_id;
    }

    @Override
    public void setPalvelu_id(int palvelu_id) {
        _palvelu_id = palvelu_id;
    }

    @Override
    public int getPalvelutyyppi_id() {
        return _palvelutyyppi_id;
    }

    @Override
    public void setPalvelutyyppi_id(int palvelutyyppi_id) {
        _palvelutyyppi_id = palvelutyyppi_id;
    }

    @Override
    public Palvelu_Palvelutyypit toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Palvelu_Palvelutyypit) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Palvelu_PalvelutyypitImpl palvelu_PalvelutyypitImpl = new Palvelu_PalvelutyypitImpl();

        palvelu_PalvelutyypitImpl.setPalvelu_id(getPalvelu_id());
        palvelu_PalvelutyypitImpl.setPalvelutyyppi_id(getPalvelutyyppi_id());

        palvelu_PalvelutyypitImpl.resetOriginalValues();

        return palvelu_PalvelutyypitImpl;
    }

    @Override
    public int compareTo(Palvelu_Palvelutyypit palvelu_Palvelutyypit) {
        Palvelu_PalvelutyypitPK primaryKey = palvelu_Palvelutyypit.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Palvelu_Palvelutyypit)) {
            return false;
        }

        Palvelu_Palvelutyypit palvelu_Palvelutyypit = (Palvelu_Palvelutyypit) obj;

        Palvelu_PalvelutyypitPK primaryKey = palvelu_Palvelutyypit.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Palvelu_Palvelutyypit> toCacheModel() {
        Palvelu_PalvelutyypitCacheModel palvelu_PalvelutyypitCacheModel = new Palvelu_PalvelutyypitCacheModel();

        palvelu_PalvelutyypitCacheModel.palvelu_id = getPalvelu_id();

        palvelu_PalvelutyypitCacheModel.palvelutyyppi_id = getPalvelutyyppi_id();

        return palvelu_PalvelutyypitCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{palvelu_id=");
        sb.append(getPalvelu_id());
        sb.append(", palvelutyyppi_id=");
        sb.append(getPalvelutyyppi_id());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.Palvelu_Palvelutyypit");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>palvelu_id</column-name><column-value><![CDATA[");
        sb.append(getPalvelu_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>palvelutyyppi_id</column-name><column-value><![CDATA[");
        sb.append(getPalvelutyyppi_id());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
