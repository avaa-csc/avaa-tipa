package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.Infra;
import fi.csc.avaa.tupa.db.model.InfraModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Infra service. Represents a row in the &quot;infra&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.InfraModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InfraImpl}.
 * </p>
 *
 * @author CSC
 * @see InfraImpl
 * @see fi.csc.avaa.tupa.db.model.Infra
 * @see fi.csc.avaa.tupa.db.model.InfraModel
 * @generated
 */
public class InfraModelImpl extends BaseModelImpl<Infra> implements InfraModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a infra model instance should use the {@link fi.csc.avaa.tupa.db.model.Infra} interface instead.
     */
    public static final String TABLE_NAME = "infra";
    public static final Object[][] TABLE_COLUMNS = {
            { "infra_id", Types.INTEGER },
            { "ISNI", Types.VARCHAR },
            { "aktiivinen", Types.BOOLEAN },
            { "valmistelu_aloitusvuosi", Types.INTEGER },
            { "rakennus_aloitusvuosi", Types.INTEGER },
            { "toiminta_aloitusvuosi", Types.INTEGER },
            { "toiminta_lopetusvuosi", Types.INTEGER },
            { "nimi", Types.VARCHAR },
            { "name", Types.VARCHAR },
            { "lyhenne", Types.VARCHAR },
            { "acronym", Types.VARCHAR },
            { "edellinen_infra", Types.INTEGER },
            { "kuvaus", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "logo_url", Types.VARCHAR },
            { "image_url", Types.VARCHAR },
            { "api_date", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table infra (infra_id INTEGER not null primary key,ISNI VARCHAR(75) null,aktiivinen BOOLEAN,valmistelu_aloitusvuosi INTEGER,rakennus_aloitusvuosi INTEGER,toiminta_aloitusvuosi INTEGER,toiminta_lopetusvuosi INTEGER,nimi VARCHAR(75) null,name VARCHAR(75) null,lyhenne VARCHAR(75) null,acronym VARCHAR(75) null,edellinen_infra INTEGER,kuvaus VARCHAR(75) null,description VARCHAR(75) null,logo_url VARCHAR(75) null,image_url VARCHAR(75) null,api_date DATE null)";
    public static final String TABLE_SQL_DROP = "drop table infra";
    public static final String ORDER_BY_JPQL = " ORDER BY infra.infra_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY infra.infra_id ASC";
    public static final String DATA_SOURCE = "tupa";
    public static final String SESSION_FACTORY = "tupaSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.Infra"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.Infra"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.fi.csc.avaa.tupa.db.model.Infra"),
            true);
    public static long API_DATE_COLUMN_BITMASK = 1L;
    public static long EDELLINEN_INFRA_COLUMN_BITMASK = 2L;
    public static long INFRA_ID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.Infra"));
    private static ClassLoader _classLoader = Infra.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Infra.class };
    private int _infra_id;
    private String _ISNI;
    private boolean _aktiivinen;
    private int _valmistelu_aloitusvuosi;
    private int _rakennus_aloitusvuosi;
    private int _toiminta_aloitusvuosi;
    private int _toiminta_lopetusvuosi;
    private String _nimi;
    private String _name;
    private String _lyhenne;
    private String _acronym;
    private int _edellinen_infra;
    private int _originalEdellinen_infra;
    private boolean _setOriginalEdellinen_infra;
    private String _kuvaus;
    private String _description;
    private String _logo_url;
    private String _image_url;
    private Date _api_date;
    private Date _originalApi_date;
    private long _columnBitmask;
    private Infra _escapedModel;

    public InfraModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _infra_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setInfra_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _infra_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Infra.class;
    }

    @Override
    public String getModelClassName() {
        return Infra.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("infra_id", getInfra_id());
        attributes.put("ISNI", getISNI());
        attributes.put("aktiivinen", getAktiivinen());
        attributes.put("valmistelu_aloitusvuosi", getValmistelu_aloitusvuosi());
        attributes.put("rakennus_aloitusvuosi", getRakennus_aloitusvuosi());
        attributes.put("toiminta_aloitusvuosi", getToiminta_aloitusvuosi());
        attributes.put("toiminta_lopetusvuosi", getToiminta_lopetusvuosi());
        attributes.put("nimi", getNimi());
        attributes.put("name", getName());
        attributes.put("lyhenne", getLyhenne());
        attributes.put("acronym", getAcronym());
        attributes.put("edellinen_infra", getEdellinen_infra());
        attributes.put("kuvaus", getKuvaus());
        attributes.put("description", getDescription());
        attributes.put("logo_url", getLogo_url());
        attributes.put("image_url", getImage_url());
        attributes.put("api_date", getApi_date());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer infra_id = (Integer) attributes.get("infra_id");

        if (infra_id != null) {
            setInfra_id(infra_id);
        }

        String ISNI = (String) attributes.get("ISNI");

        if (ISNI != null) {
            setISNI(ISNI);
        }

        Boolean aktiivinen = (Boolean) attributes.get("aktiivinen");

        if (aktiivinen != null) {
            setAktiivinen(aktiivinen);
        }

        Integer valmistelu_aloitusvuosi = (Integer) attributes.get(
                "valmistelu_aloitusvuosi");

        if (valmistelu_aloitusvuosi != null) {
            setValmistelu_aloitusvuosi(valmistelu_aloitusvuosi);
        }

        Integer rakennus_aloitusvuosi = (Integer) attributes.get(
                "rakennus_aloitusvuosi");

        if (rakennus_aloitusvuosi != null) {
            setRakennus_aloitusvuosi(rakennus_aloitusvuosi);
        }

        Integer toiminta_aloitusvuosi = (Integer) attributes.get(
                "toiminta_aloitusvuosi");

        if (toiminta_aloitusvuosi != null) {
            setToiminta_aloitusvuosi(toiminta_aloitusvuosi);
        }

        Integer toiminta_lopetusvuosi = (Integer) attributes.get(
                "toiminta_lopetusvuosi");

        if (toiminta_lopetusvuosi != null) {
            setToiminta_lopetusvuosi(toiminta_lopetusvuosi);
        }

        String nimi = (String) attributes.get("nimi");

        if (nimi != null) {
            setNimi(nimi);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String lyhenne = (String) attributes.get("lyhenne");

        if (lyhenne != null) {
            setLyhenne(lyhenne);
        }

        String acronym = (String) attributes.get("acronym");

        if (acronym != null) {
            setAcronym(acronym);
        }

        Integer edellinen_infra = (Integer) attributes.get("edellinen_infra");

        if (edellinen_infra != null) {
            setEdellinen_infra(edellinen_infra);
        }

        String kuvaus = (String) attributes.get("kuvaus");

        if (kuvaus != null) {
            setKuvaus(kuvaus);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String logo_url = (String) attributes.get("logo_url");

        if (logo_url != null) {
            setLogo_url(logo_url);
        }

        String image_url = (String) attributes.get("image_url");

        if (image_url != null) {
            setImage_url(image_url);
        }

        Date api_date = (Date) attributes.get("api_date");

        if (api_date != null) {
            setApi_date(api_date);
        }
    }

    @Override
    public int getInfra_id() {
        return _infra_id;
    }

    @Override
    public void setInfra_id(int infra_id) {
        _infra_id = infra_id;
    }

    @Override
    public String getISNI() {
        if (_ISNI == null) {
            return StringPool.BLANK;
        } else {
            return _ISNI;
        }
    }

    @Override
    public void setISNI(String ISNI) {
        _ISNI = ISNI;
    }

    @Override
    public boolean getAktiivinen() {
        return _aktiivinen;
    }

    @Override
    public boolean isAktiivinen() {
        return _aktiivinen;
    }

    @Override
    public void setAktiivinen(boolean aktiivinen) {
        _aktiivinen = aktiivinen;
    }

    @Override
    public int getValmistelu_aloitusvuosi() {
        return _valmistelu_aloitusvuosi;
    }

    @Override
    public void setValmistelu_aloitusvuosi(int valmistelu_aloitusvuosi) {
        _valmistelu_aloitusvuosi = valmistelu_aloitusvuosi;
    }

    @Override
    public int getRakennus_aloitusvuosi() {
        return _rakennus_aloitusvuosi;
    }

    @Override
    public void setRakennus_aloitusvuosi(int rakennus_aloitusvuosi) {
        _rakennus_aloitusvuosi = rakennus_aloitusvuosi;
    }

    @Override
    public int getToiminta_aloitusvuosi() {
        return _toiminta_aloitusvuosi;
    }

    @Override
    public void setToiminta_aloitusvuosi(int toiminta_aloitusvuosi) {
        _toiminta_aloitusvuosi = toiminta_aloitusvuosi;
    }

    @Override
    public int getToiminta_lopetusvuosi() {
        return _toiminta_lopetusvuosi;
    }

    @Override
    public void setToiminta_lopetusvuosi(int toiminta_lopetusvuosi) {
        _toiminta_lopetusvuosi = toiminta_lopetusvuosi;
    }

    @Override
    public String getNimi() {
        if (_nimi == null) {
            return StringPool.BLANK;
        } else {
            return _nimi;
        }
    }

    @Override
    public void setNimi(String nimi) {
        _nimi = nimi;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getLyhenne() {
        if (_lyhenne == null) {
            return StringPool.BLANK;
        } else {
            return _lyhenne;
        }
    }

    @Override
    public void setLyhenne(String lyhenne) {
        _lyhenne = lyhenne;
    }

    @Override
    public String getAcronym() {
        if (_acronym == null) {
            return StringPool.BLANK;
        } else {
            return _acronym;
        }
    }

    @Override
    public void setAcronym(String acronym) {
        _acronym = acronym;
    }

    @Override
    public int getEdellinen_infra() {
        return _edellinen_infra;
    }

    @Override
    public void setEdellinen_infra(int edellinen_infra) {
        _columnBitmask |= EDELLINEN_INFRA_COLUMN_BITMASK;

        if (!_setOriginalEdellinen_infra) {
            _setOriginalEdellinen_infra = true;

            _originalEdellinen_infra = _edellinen_infra;
        }

        _edellinen_infra = edellinen_infra;
    }

    public int getOriginalEdellinen_infra() {
        return _originalEdellinen_infra;
    }

    @Override
    public String getKuvaus() {
        if (_kuvaus == null) {
            return StringPool.BLANK;
        } else {
            return _kuvaus;
        }
    }

    @Override
    public void setKuvaus(String kuvaus) {
        _kuvaus = kuvaus;
    }

    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @Override
    public String getLogo_url() {
        if (_logo_url == null) {
            return StringPool.BLANK;
        } else {
            return _logo_url;
        }
    }

    @Override
    public void setLogo_url(String logo_url) {
        _logo_url = logo_url;
    }

    @Override
    public String getImage_url() {
        if (_image_url == null) {
            return StringPool.BLANK;
        } else {
            return _image_url;
        }
    }

    @Override
    public void setImage_url(String image_url) {
        _image_url = image_url;
    }

    @Override
    public Date getApi_date() {
        return _api_date;
    }

    @Override
    public void setApi_date(Date api_date) {
        _columnBitmask |= API_DATE_COLUMN_BITMASK;

        if (_originalApi_date == null) {
            _originalApi_date = _api_date;
        }

        _api_date = api_date;
    }

    public Date getOriginalApi_date() {
        return _originalApi_date;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public Infra toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Infra) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        InfraImpl infraImpl = new InfraImpl();

        infraImpl.setInfra_id(getInfra_id());
        infraImpl.setISNI(getISNI());
        infraImpl.setAktiivinen(getAktiivinen());
        infraImpl.setValmistelu_aloitusvuosi(getValmistelu_aloitusvuosi());
        infraImpl.setRakennus_aloitusvuosi(getRakennus_aloitusvuosi());
        infraImpl.setToiminta_aloitusvuosi(getToiminta_aloitusvuosi());
        infraImpl.setToiminta_lopetusvuosi(getToiminta_lopetusvuosi());
        infraImpl.setNimi(getNimi());
        infraImpl.setName(getName());
        infraImpl.setLyhenne(getLyhenne());
        infraImpl.setAcronym(getAcronym());
        infraImpl.setEdellinen_infra(getEdellinen_infra());
        infraImpl.setKuvaus(getKuvaus());
        infraImpl.setDescription(getDescription());
        infraImpl.setLogo_url(getLogo_url());
        infraImpl.setImage_url(getImage_url());
        infraImpl.setApi_date(getApi_date());

        infraImpl.resetOriginalValues();

        return infraImpl;
    }

    @Override
    public int compareTo(Infra infra) {
        int primaryKey = infra.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Infra)) {
            return false;
        }

        Infra infra = (Infra) obj;

        int primaryKey = infra.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        InfraModelImpl infraModelImpl = this;

        infraModelImpl._originalEdellinen_infra = infraModelImpl._edellinen_infra;

        infraModelImpl._setOriginalEdellinen_infra = false;

        infraModelImpl._originalApi_date = infraModelImpl._api_date;

        infraModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Infra> toCacheModel() {
        InfraCacheModel infraCacheModel = new InfraCacheModel();

        infraCacheModel.infra_id = getInfra_id();

        infraCacheModel.ISNI = getISNI();

        String ISNI = infraCacheModel.ISNI;

        if ((ISNI != null) && (ISNI.length() == 0)) {
            infraCacheModel.ISNI = null;
        }

        infraCacheModel.aktiivinen = getAktiivinen();

        infraCacheModel.valmistelu_aloitusvuosi = getValmistelu_aloitusvuosi();

        infraCacheModel.rakennus_aloitusvuosi = getRakennus_aloitusvuosi();

        infraCacheModel.toiminta_aloitusvuosi = getToiminta_aloitusvuosi();

        infraCacheModel.toiminta_lopetusvuosi = getToiminta_lopetusvuosi();

        infraCacheModel.nimi = getNimi();

        String nimi = infraCacheModel.nimi;

        if ((nimi != null) && (nimi.length() == 0)) {
            infraCacheModel.nimi = null;
        }

        infraCacheModel.name = getName();

        String name = infraCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            infraCacheModel.name = null;
        }

        infraCacheModel.lyhenne = getLyhenne();

        String lyhenne = infraCacheModel.lyhenne;

        if ((lyhenne != null) && (lyhenne.length() == 0)) {
            infraCacheModel.lyhenne = null;
        }

        infraCacheModel.acronym = getAcronym();

        String acronym = infraCacheModel.acronym;

        if ((acronym != null) && (acronym.length() == 0)) {
            infraCacheModel.acronym = null;
        }

        infraCacheModel.edellinen_infra = getEdellinen_infra();

        infraCacheModel.kuvaus = getKuvaus();

        String kuvaus = infraCacheModel.kuvaus;

        if ((kuvaus != null) && (kuvaus.length() == 0)) {
            infraCacheModel.kuvaus = null;
        }

        infraCacheModel.description = getDescription();

        String description = infraCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            infraCacheModel.description = null;
        }

        infraCacheModel.logo_url = getLogo_url();

        String logo_url = infraCacheModel.logo_url;

        if ((logo_url != null) && (logo_url.length() == 0)) {
            infraCacheModel.logo_url = null;
        }

        infraCacheModel.image_url = getImage_url();

        String image_url = infraCacheModel.image_url;

        if ((image_url != null) && (image_url.length() == 0)) {
            infraCacheModel.image_url = null;
        }

        Date api_date = getApi_date();

        if (api_date != null) {
            infraCacheModel.api_date = api_date.getTime();
        } else {
            infraCacheModel.api_date = Long.MIN_VALUE;
        }

        return infraCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(35);

        sb.append("{infra_id=");
        sb.append(getInfra_id());
        sb.append(", ISNI=");
        sb.append(getISNI());
        sb.append(", aktiivinen=");
        sb.append(getAktiivinen());
        sb.append(", valmistelu_aloitusvuosi=");
        sb.append(getValmistelu_aloitusvuosi());
        sb.append(", rakennus_aloitusvuosi=");
        sb.append(getRakennus_aloitusvuosi());
        sb.append(", toiminta_aloitusvuosi=");
        sb.append(getToiminta_aloitusvuosi());
        sb.append(", toiminta_lopetusvuosi=");
        sb.append(getToiminta_lopetusvuosi());
        sb.append(", nimi=");
        sb.append(getNimi());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", lyhenne=");
        sb.append(getLyhenne());
        sb.append(", acronym=");
        sb.append(getAcronym());
        sb.append(", edellinen_infra=");
        sb.append(getEdellinen_infra());
        sb.append(", kuvaus=");
        sb.append(getKuvaus());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", logo_url=");
        sb.append(getLogo_url());
        sb.append(", image_url=");
        sb.append(getImage_url());
        sb.append(", api_date=");
        sb.append(getApi_date());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(55);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.Infra");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>infra_id</column-name><column-value><![CDATA[");
        sb.append(getInfra_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ISNI</column-name><column-value><![CDATA[");
        sb.append(getISNI());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>aktiivinen</column-name><column-value><![CDATA[");
        sb.append(getAktiivinen());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>valmistelu_aloitusvuosi</column-name><column-value><![CDATA[");
        sb.append(getValmistelu_aloitusvuosi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rakennus_aloitusvuosi</column-name><column-value><![CDATA[");
        sb.append(getRakennus_aloitusvuosi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>toiminta_aloitusvuosi</column-name><column-value><![CDATA[");
        sb.append(getToiminta_aloitusvuosi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>toiminta_lopetusvuosi</column-name><column-value><![CDATA[");
        sb.append(getToiminta_lopetusvuosi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nimi</column-name><column-value><![CDATA[");
        sb.append(getNimi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lyhenne</column-name><column-value><![CDATA[");
        sb.append(getLyhenne());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>acronym</column-name><column-value><![CDATA[");
        sb.append(getAcronym());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>edellinen_infra</column-name><column-value><![CDATA[");
        sb.append(getEdellinen_infra());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuvaus</column-name><column-value><![CDATA[");
        sb.append(getKuvaus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>logo_url</column-name><column-value><![CDATA[");
        sb.append(getLogo_url());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>image_url</column-name><column-value><![CDATA[");
        sb.append(getImage_url());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>api_date</column-name><column-value><![CDATA[");
        sb.append(getApi_date());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
