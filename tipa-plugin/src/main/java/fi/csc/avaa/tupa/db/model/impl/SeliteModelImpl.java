package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.Selite;
import fi.csc.avaa.tupa.db.model.SeliteModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Selite service. Represents a row in the &quot;selite&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.SeliteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SeliteImpl}.
 * </p>
 *
 * @author pj,jmlehtin
 * @see SeliteImpl
 * @see fi.csc.avaa.tupa.db.model.Selite
 * @see fi.csc.avaa.tupa.db.model.SeliteModel
 * @generated
 */
public class SeliteModelImpl extends BaseModelImpl<Selite>
    implements SeliteModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a selite model instance should use the {@link fi.csc.avaa.tupa.db.model.Selite} interface instead.
     */
    public static final String TABLE_NAME = "selite";
    public static final Object[][] TABLE_COLUMNS = {
            { "selite_id", Types.INTEGER },
            { "nimi", Types.VARCHAR },
            { "name", Types.VARCHAR },
            { "kuvaus", Types.VARCHAR },
            { "description", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table selite (selite_id INTEGER not null primary key,nimi VARCHAR(75) null,name VARCHAR(75) null,kuvaus VARCHAR(75) null,description VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table selite";
    public static final String ORDER_BY_JPQL = " ORDER BY selite.selite_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY selite.selite_id ASC";
    public static final String DATA_SOURCE = "tupa";
    public static final String SESSION_FACTORY = "tupaSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.Selite"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.Selite"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.Selite"));
    private static ClassLoader _classLoader = Selite.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Selite.class };
    private int _selite_id;
    private String _nimi;
    private String _name;
    private String _kuvaus;
    private String _description;
    private Selite _escapedModel;

    public SeliteModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _selite_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setSelite_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _selite_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Selite.class;
    }

    @Override
    public String getModelClassName() {
        return Selite.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("selite_id", getSelite_id());
        attributes.put("nimi", getNimi());
        attributes.put("name", getName());
        attributes.put("kuvaus", getKuvaus());
        attributes.put("description", getDescription());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer selite_id = (Integer) attributes.get("selite_id");

        if (selite_id != null) {
            setSelite_id(selite_id);
        }

        String nimi = (String) attributes.get("nimi");

        if (nimi != null) {
            setNimi(nimi);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String kuvaus = (String) attributes.get("kuvaus");

        if (kuvaus != null) {
            setKuvaus(kuvaus);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }
    }

    @Override
    public int getSelite_id() {
        return _selite_id;
    }

    @Override
    public void setSelite_id(int selite_id) {
        _selite_id = selite_id;
    }

    @Override
    public String getNimi() {
        if (_nimi == null) {
            return StringPool.BLANK;
        } else {
            return _nimi;
        }
    }

    @Override
    public void setNimi(String nimi) {
        _nimi = nimi;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getKuvaus() {
        if (_kuvaus == null) {
            return StringPool.BLANK;
        } else {
            return _kuvaus;
        }
    }

    @Override
    public void setKuvaus(String kuvaus) {
        _kuvaus = kuvaus;
    }

    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @Override
    public Selite toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Selite) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SeliteImpl seliteImpl = new SeliteImpl();

        seliteImpl.setSelite_id(getSelite_id());
        seliteImpl.setNimi(getNimi());
        seliteImpl.setName(getName());
        seliteImpl.setKuvaus(getKuvaus());
        seliteImpl.setDescription(getDescription());

        seliteImpl.resetOriginalValues();

        return seliteImpl;
    }

    @Override
    public int compareTo(Selite selite) {
        int primaryKey = selite.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Selite)) {
            return false;
        }

        Selite selite = (Selite) obj;

        int primaryKey = selite.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Selite> toCacheModel() {
        SeliteCacheModel seliteCacheModel = new SeliteCacheModel();

        seliteCacheModel.selite_id = getSelite_id();

        seliteCacheModel.nimi = getNimi();

        String nimi = seliteCacheModel.nimi;

        if ((nimi != null) && (nimi.length() == 0)) {
            seliteCacheModel.nimi = null;
        }

        seliteCacheModel.name = getName();

        String name = seliteCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            seliteCacheModel.name = null;
        }

        seliteCacheModel.kuvaus = getKuvaus();

        String kuvaus = seliteCacheModel.kuvaus;

        if ((kuvaus != null) && (kuvaus.length() == 0)) {
            seliteCacheModel.kuvaus = null;
        }

        seliteCacheModel.description = getDescription();

        String description = seliteCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            seliteCacheModel.description = null;
        }

        return seliteCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{selite_id=");
        sb.append(getSelite_id());
        sb.append(", nimi=");
        sb.append(getNimi());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", kuvaus=");
        sb.append(getKuvaus());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.Selite");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>selite_id</column-name><column-value><![CDATA[");
        sb.append(getSelite_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nimi</column-name><column-value><![CDATA[");
        sb.append(getNimi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuvaus</column-name><column-value><![CDATA[");
        sb.append(getKuvaus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
