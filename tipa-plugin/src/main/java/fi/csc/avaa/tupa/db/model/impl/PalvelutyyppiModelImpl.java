package fi.csc.avaa.tupa.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.tupa.db.model.Palvelutyyppi;
import fi.csc.avaa.tupa.db.model.PalvelutyyppiModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Palvelutyyppi service. Represents a row in the &quot;palvelutyyppi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.tupa.db.model.PalvelutyyppiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PalvelutyyppiImpl}.
 * </p>
 *
 * @author pj,jmlehtin
 * @see PalvelutyyppiImpl
 * @see fi.csc.avaa.tupa.db.model.Palvelutyyppi
 * @see fi.csc.avaa.tupa.db.model.PalvelutyyppiModel
 * @generated
 */
public class PalvelutyyppiModelImpl extends BaseModelImpl<Palvelutyyppi>
    implements PalvelutyyppiModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a palvelutyyppi model instance should use the {@link fi.csc.avaa.tupa.db.model.Palvelutyyppi} interface instead.
     */
    public static final String TABLE_NAME = "palvelutyyppi";
    public static final Object[][] TABLE_COLUMNS = {
            { "palvelutyyppi_id", Types.INTEGER },
            { "tyyppi", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table palvelutyyppi (palvelutyyppi_id INTEGER not null primary key,tyyppi INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table palvelutyyppi";
    public static final String ORDER_BY_JPQL = " ORDER BY palvelutyyppi.palvelutyyppi_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY palvelutyyppi.palvelutyyppi_id ASC";
    public static final String DATA_SOURCE = "tupa";
    public static final String SESSION_FACTORY = "tupaSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.tupa.db.model.Palvelutyyppi"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.tupa.db.model.Palvelutyyppi"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.tupa.db.model.Palvelutyyppi"));
    private static ClassLoader _classLoader = Palvelutyyppi.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Palvelutyyppi.class
        };
    private int _palvelutyyppi_id;
    private int _tyyppi;
    private Palvelutyyppi _escapedModel;

    public PalvelutyyppiModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _palvelutyyppi_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setPalvelutyyppi_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _palvelutyyppi_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Palvelutyyppi.class;
    }

    @Override
    public String getModelClassName() {
        return Palvelutyyppi.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("palvelutyyppi_id", getPalvelutyyppi_id());
        attributes.put("tyyppi", getTyyppi());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer palvelutyyppi_id = (Integer) attributes.get("palvelutyyppi_id");

        if (palvelutyyppi_id != null) {
            setPalvelutyyppi_id(palvelutyyppi_id);
        }

        Integer tyyppi = (Integer) attributes.get("tyyppi");

        if (tyyppi != null) {
            setTyyppi(tyyppi);
        }
    }

    @Override
    public int getPalvelutyyppi_id() {
        return _palvelutyyppi_id;
    }

    @Override
    public void setPalvelutyyppi_id(int palvelutyyppi_id) {
        _palvelutyyppi_id = palvelutyyppi_id;
    }

    @Override
    public int getTyyppi() {
        return _tyyppi;
    }

    @Override
    public void setTyyppi(int tyyppi) {
        _tyyppi = tyyppi;
    }

    @Override
    public Palvelutyyppi toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Palvelutyyppi) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PalvelutyyppiImpl palvelutyyppiImpl = new PalvelutyyppiImpl();

        palvelutyyppiImpl.setPalvelutyyppi_id(getPalvelutyyppi_id());
        palvelutyyppiImpl.setTyyppi(getTyyppi());

        palvelutyyppiImpl.resetOriginalValues();

        return palvelutyyppiImpl;
    }

    @Override
    public int compareTo(Palvelutyyppi palvelutyyppi) {
        int primaryKey = palvelutyyppi.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Palvelutyyppi)) {
            return false;
        }

        Palvelutyyppi palvelutyyppi = (Palvelutyyppi) obj;

        int primaryKey = palvelutyyppi.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Palvelutyyppi> toCacheModel() {
        PalvelutyyppiCacheModel palvelutyyppiCacheModel = new PalvelutyyppiCacheModel();

        palvelutyyppiCacheModel.palvelutyyppi_id = getPalvelutyyppi_id();

        palvelutyyppiCacheModel.tyyppi = getTyyppi();

        return palvelutyyppiCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{palvelutyyppi_id=");
        sb.append(getPalvelutyyppi_id());
        sb.append(", tyyppi=");
        sb.append(getTyyppi());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.tupa.db.model.Palvelutyyppi");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>palvelutyyppi_id</column-name><column-value><![CDATA[");
        sb.append(getPalvelutyyppi_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tyyppi</column-name><column-value><![CDATA[");
        sb.append(getTyyppi());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
